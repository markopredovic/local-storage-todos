{"version":3,"sources":["types.js","components/Header/index.js","components/Header/Header.js","context/todosContext.js","components/Footer/index.js","components/Footer/Footer.js","components/AddTodoForm/AddTodoForm.js","components/TodosList/Todo/Todo.js","components/TodosList/TodosList.js","components/Button/index.js","components/Button/Button.js","components/Pagination/index.js","components/Pagination/Pagination.js","components/pages/Homepage/index.js","components/pages/Homepage/Homepage.js","components/Archive/ArchiveItem/ArchiveItem.js","components/Archive/Archive.js","components/pages/ArchivePage/index.js","components/pages/ArchivePage/ArchivePage.js","reducers/todosReducer.js","hooks/useLocalStorage.js","App.js","serviceWorker.js","index.js"],"names":["BASE_URL","Header","className","to","exact","activeClassName","createContext","todos","addTodo","deleteTodo","getTodos","Footer","context","useContext","TodosContext","onClick","setLanguage","lang","withRouter","props","strings","LocalizedStrings","en","addToList","inputPlaceholderAdd","emptyField","rs","todosContext","inputRef","useRef","useState","error","setError","useEffect","current","focus","validate","value","length","noValidate","onSubmit","event","preventDefault","todo","id","Math","round","random","name","isComplete","ToastsStore","success","type","placeholder","ref","style","borderColor","whiteSpace","store","position","ToastsContainerPosition","TOP_RIGHT","Todo","itemDeleted","itemArchived","checked","onChange","toggleTodo","removeTodo","archiveTodo","info","TodosList","emptyList","addItem","currentPage","itemsPerPage","_start","_getCurrentPageIndex","pagination","startIndex","endIndex","filter","index","map","key","Button","isCurrent","setCurrentPage","Pagination","num","buttons","todos_count","floor","calculateTotalPages","Array","fill","item","Homepage","ArchiveItem","revertedToList","warning","setTimeout","backToTodos","Archive","emptyArchive","archive","ArchivePage","initialState","state","action","payload","addTodoArchive","backTodo","updated_todos","updateCurrentPage","currentTodo","updated_archive","useLocalStorage","useReducer","todosReducer","dispatch","JSON","parse","window","localStorage","getItem","setItem","stringify","updatedArchive","updatedTodos","App","Provider","path","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qSAUaA,EAAW,eCRTC,ECGA,WACb,OACE,yBAAKC,UAAU,YACb,4BACE,4BACE,kBAAC,IAAD,CAASC,GAAIH,EAAUI,OAAK,EAACC,gBAAgB,kBAC3C,kBAAC,IAAD,QAGJ,4BACE,kBAAC,IAAD,CACEF,GAAE,UAAKH,EAAL,aACFI,OAAK,EACLC,gBAAgB,kBAEhB,kBAAC,IAAD,QAGJ,4BACE,kBAAC,IAAD,CACEF,GAAE,UAAKH,EAAL,YACFI,OAAK,EACLC,gBAAgB,kBAEhB,kBAAC,IAAD,WC1BGC,0BAAc,CACzBC,MAAO,GACPC,QAAS,aACTC,WAAY,aACZC,SAAU,eCLCC,ECEA,WACX,IAAMC,EAAUC,qBAAWC,GAE7B,OACE,yBAAKZ,UAAU,YACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,UACb,4BACE,4BACE,0BACEa,QAAS,kBAAMH,EAAQI,YAAY,OACnCd,UACmB,OAAjBU,EAAQK,KACJ,0BACA,aALR,WAWF,iCACA,4BACE,0BACEF,QAAS,kBAAMH,EAAQI,YAAY,OACnCd,UACmB,OAAjBU,EAAQK,KACJ,0BACA,aALR,iB,uBC8DCC,eAhFK,SAACC,GAEnB,IAAIC,EAAU,IAAIC,IAAiB,CACjCC,GAAI,CACFC,UAAW,qBACXC,oBAAqB,aACrBC,WAAY,gBAEdC,GAAI,CACFH,UAAW,kBACXC,oBAAqB,eACrBC,WAAY,mBAIRb,EAAUC,qBAAWc,GACrBC,EAAWC,iBAAO,IAhBG,EAiBDC,mBAAS,MAjBR,mBAiBpBC,EAjBoB,KAiBbC,EAjBa,KAmB3BZ,EAAQJ,YAAYJ,EAAQK,MAE5BgB,qBAAU,WACRL,EAASM,QAAQC,UAChB,IAEH,IAqBMC,EAAW,WAGb,OAF8C,IAAlCR,EAASM,QAAQG,MAAMC,OAAelB,EAAQK,WAAa,IAS3E,OACE,yBAAKvB,UAAU,cACb,0BAAMqC,YAAU,EAACC,SAjCG,SAAAC,GACpBA,EAAMC,iBACNV,EAAS,MAET,IAAMD,EAAQK,IAEd,GAAGL,EAAMO,OACL,OAAON,EAASD,GAGpB,IAAIY,EAAO,GACXA,EAAKC,GAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,UAC1BJ,EAAKK,KAAOpB,EAASM,QAAQG,MAC7BM,EAAKM,YAAa,EAElBrC,EAAQJ,QAAQmC,GAChBf,EAASM,QAAQG,MAAQ,KACzBT,EAASM,QAAQC,QACjBe,cAAYC,QAAQ/B,EAAQG,aAgB1B,2BACE6B,KAAK,OACLC,YAAajC,EAAQI,oBACrB8B,IAAK1B,EACL2B,MAAOxB,GAXE,CACfyB,YAAa,SAYT,0BAAMtD,UAAU,iBAAiBqD,MAAO,CAAEE,WAAY,aACnD1B,GAEH,4BAAQ7B,UAAU,iBAAiBkD,KAAK,UACtC,kBAAC,IAAD,QAGJ,kBAAC,kBAAD,CACEM,MAAOR,cACPS,SAAUC,0BAAwBC,gBCT7BC,EAzDF,SAAA3C,GACX,IAAIC,EAAU,IAAIC,IAAiB,CACjCC,GAAI,CACFyC,YAAa,mBACbC,aAAc,qBAEhBtC,GAAI,CACFqC,YAAa,sBACbC,aAAc,2BAIZpD,EAAUC,qBAAWc,GAE7BP,EAAQJ,YAAYJ,EAAQK,MAY1B,OACE,yBAAKf,UAAU,UACb,+BACE,2BACEkD,KAAK,WACLa,QAAS9C,EAAM8B,WACfiB,SAAU,kBAAMtD,EAAQuD,WAAWhD,EAAMyB,OAE3C,0BAAM1C,UAAU,+BACd,kBAAC,IAAD,OAEF,0BAAMA,UAAU,6BACd,kBAAC,IAAD,OAGDiB,EAAM6B,MAET,4BAAQ9C,UAAU,eAAea,QA3BZ,WACvBH,EAAQwD,WAAWjD,EAAMyB,IACzBM,cAAYnB,MAAMX,EAAQ2C,eA0BtB,kBAAC,IAAD,OAEF,4BAAQ7D,UAAU,iBAAiBa,QAzBb,WACxBH,EAAQyD,YAAYlD,EAAMyB,IAC1BM,cAAYoB,KAAKlD,EAAQ4C,gBAwBrB,kBAAC,IAAD,OAEF,kBAAC,kBAAD,CACEN,MAAOR,cACPS,SAAUC,0BAAwBC,cCjB3BU,EA3CG,WAChB,IAAInD,EAAU,IAAIC,IAAiB,CACjCC,GAAI,CACFkD,UAAW,iBACXC,QAAS,YAEX/C,GAAI,CACF8C,UAAW,mBACXC,QAAS,kBAIP7D,EAAUC,qBAAWc,GAC3BP,EAAQJ,YAAYJ,EAAQK,MAE5B,IAAIV,EACF,yBAAKL,UAAU,gBACb,2BAAIkB,EAAQoD,WACZ,kBAAC,IAAD,CAAMrE,GAAE,UAAKH,EAAL,cAA2BoB,EAAQqD,UAlBzB,EAsBO,SAACC,EAAaC,GACzC,IAAIC,EAASF,EAAcC,EAG3B,MAAO,CAACC,EAFCA,EAASD,EAAe,GAKJE,CAC7BjE,EAAQkE,WAAWJ,YACnB9D,EAAQkE,WAAWH,cA/BC,mBA6BfI,EA7Be,KA6BHC,EA7BG,KAwCtB,OANIpE,EAAQL,MAAM+B,SAChB/B,EAAQK,EAAQL,MACb0E,QAAO,SAACtC,EAAMuC,GAAP,OAAiBA,GAASH,GAAcG,GAASF,KACxDG,KAAI,SAAAxC,GAAI,OAAI,kBAAC,EAAD,eAAMyC,IAAKzC,EAAKC,IAAQD,QAGlC,yBAAKzC,UAAU,WAAWK,IC7CpB8E,ECCA,SAAC,GAAe,IAAbH,EAAY,EAAZA,MACVtE,EAAUC,qBAAWC,GAErBwE,EAAYJ,IAAUtE,EAAQkE,WAAWJ,YAE/C,OACE,4BACExE,UAAWoF,EAAY,yBAA2B,iBAClDvE,QAAS,kBAAMH,EAAQ2E,eAAeL,KAErCA,EAAQ,ICXAM,ECEI,WAEjB,IAEoBC,EAFd7E,EAAUC,qBAAWC,GAqBrB4E,GAnBcD,EAMQ,WAC1B,IACME,EAAc/E,EAAQL,MAAM+B,OAC5BqC,EAAe/D,EAAQkE,WAAWH,aAOxC,OAJEgB,EAAchB,IAAiB,EAC3B9B,KAAK+C,MAAMD,EAAchB,GAAgB,EACzC9B,KAAK+C,MAAMD,EAAchB,GAKLkB,GAlBV,IAAIC,MAAML,GAAKM,KAAK,IAAIZ,KAAI,SAACa,EAAMd,GAAP,OAAiB,kBAAC,EAAD,CAAQE,IAAKF,EAAOA,MAAOA,QAoB1F,OACE,yBAAKhF,UAAU,gBACZwF,IC7BQO,ECGE,WACf,IAAMrF,EAAUC,qBAAWC,GAQ3B,OACE,oCACE,kBAAC,EAAD,QAPKF,EAAQL,MAAM+B,QAAU1B,EAAQkE,WAAWH,eAQ5B,kBAAC,EAAD,QCiCXuB,EAxCK,SAAA/E,GAClB,IAAIC,EAAU,IAAIC,IAAiB,CACjCC,GAAI,CACF6E,eAAgB,0BAElBzE,GAAI,CACFyE,eAAgB,sBAIdvF,EAAUC,qBAAWc,GAE3BP,EAAQJ,YAAYJ,EAAQK,MAY5B,OACE,4BACE,yBAAKf,UAAU,kBACb,8BAAOiB,EAAM6B,MACb,4BAAQ9C,UAAU,gBAAgBa,QAdV,WAC5BmC,cAAYkD,QAAQhF,EAAQ+E,gBAEX,IAAjBhF,EAAMmB,OACF+D,YAAW,WACTzF,EAAQ0F,YAAYnF,EAAMyB,MACzB,KACHhC,EAAQ0F,YAAYnF,EAAMyB,MAQxB,kBAAC,IAAD,QAGJ,kBAAC,kBAAD,CACEc,MAAOR,cACPS,SAAUC,0BAAwBC,cCN3B0C,EAhCC,WACd,IAAInF,EAAU,IAAIC,IAAiB,CACjCC,GAAI,CACFkF,aAAc,qBAEhB9E,GAAI,CACF8E,aAAc,uBAIZ5F,EAAUC,qBAAWc,GAG3B,OAFAP,EAAQJ,YAAYJ,EAAQK,MAG1B,oCACE,wBAAIf,UAAU,aACXU,EAAQ6F,QAAQnE,OACf1B,EAAQ6F,QAAQtB,KAAI,SAACa,EAAMd,GAAP,OAClB,kBAAC,EAAD,eACEE,IAAKF,GACDc,EAFN,CAGE1D,OAAQ1B,EAAQ6F,QAAQnE,aAI5B,6BAAMlB,EAAQoF,iBC7BTE,ECCK,WAClB,OACE,oCACE,kBAAC,EAAD,Q,wkBCJN,IAAMC,EAAe,CACnBpG,MAAO,GACPkG,QAAS,GACT3B,WAAY,CACVH,aAAc,EACdD,YAAa,GAEfzD,KAAM,MAGO,aAAmC,IAAlC2F,EAAiC,uDAAzBD,EAAcE,EAAW,uCAC/C,OAAQA,EAAOzD,MACb,InBdoB,WmBelB,OAAO,EAAP,GACKwD,EADL,CAEErG,MAAM,GAAD,mBAAMqG,EAAMrG,OAAZ,CAAmBsG,EAAOC,YAEnC,InBlBsB,YmBmBpB,OAAO,EAAP,GACKF,EADL,CAEErG,MAAOsG,EAAOC,UAElB,InBtBuB,cmBuBrB,OAAO3C,EAAWyC,EAAOC,EAAOC,SAClC,InBvBuB,cmBwBrB,OAAO1C,EAAWwC,EAAOC,EAAOC,SAClC,InBtB4B,mBmBuB1B,OAAOC,EAAeH,EAAOC,EAAOC,SACtC,InBvB8B,qBmBwB5B,OAAO,EAAP,GACKF,EADL,CAEEH,QAASI,EAAOC,UAEpB,InB3BqB,YmB4BnB,OAAOE,EAASJ,EAAOC,EAAOC,SAChC,InBzB4B,mBmB0B1B,OAAO,EAAP,GACKF,EADL,CAEE9B,WAAW,EAAD,GACL8B,EAAM9B,WADD,CAERJ,YAAamC,EAAOC,YAG1B,InBhCoB,WmBiClB,OAAO,EAAP,GACKF,EADL,CAEE3F,KAAM4F,EAAOC,UAEjB,QACE,OAAOF,IAIPzC,EAAa,SAACyC,EAAOhE,GACzB,IAAIqE,EAAgBL,EAAMrG,MAAM4E,KAAI,SAAAxC,GAClC,OAAGA,EAAKC,KAAOA,EACN,EAAP,GACKD,EADL,CAEEM,YAAaN,EAAKM,aAGbN,KAIX,OAAO,EAAP,GACKiE,EADL,CAEErG,MAAO0G,KAIL7C,EAAa,SAACwC,EAAOhE,GACzB,IAAIqE,EAAgBL,EAAMrG,MAAM0E,QAAO,SAAAtC,GACrC,OAAIA,EAAKC,KAAOA,EACP,KAEAD,KAILmC,EAAa8B,EAAM9B,WAErBoC,EACFD,EAAc3E,OAASwC,EAAWH,eAAiB,EAC/CG,EAAWJ,YAAc,EACzBI,EAAWJ,YAEjB,OAAO,EAAP,GACKkC,EADL,CAEErG,MAAO0G,EACPnC,WAAW,EAAD,GAAM8B,EAAM9B,WAAZ,CAAwBJ,YAAawC,OAI7CH,EAAiB,SAACH,EAAOhE,GAC7B,IAAMyB,EAAcuC,EAAMrG,MAAM0E,QAAO,SAAAtC,GAAI,OAAIA,EAAKC,KAAOA,KAAI,GAEzDqE,EAAgBL,EAAMrG,MAAM0E,QAAO,SAAAe,GAAI,OAAIA,EAAKpD,KAAOA,EAAK,KAAOoD,KAEjElB,EAAa8B,EAAM9B,WAErBoC,EACFD,EAAc3E,OAASwC,EAAWH,eAAiB,EAC/CG,EAAWJ,YAAc,EACzBI,EAAWJ,YAEnB,OAAO,EAAP,GACKkC,EADL,CAEErG,MAAO0G,EACPR,QAAQ,GAAD,mBAAMG,EAAMH,SAAZ,CAAqBpC,IAC5BS,WAAW,EAAD,GAAO8B,EAAM9B,WAAb,CAAyBJ,YAAawC,OAI9CF,EAAW,SAACJ,EAAOhE,GAEvB,IAAMuE,EAAcP,EAAMH,QAAQxB,QAAO,SAAAtC,GAAI,OAAIA,EAAKC,KAAOA,KAAI,GAC3DwE,EAAkBR,EAAMH,QAAQxB,QAAO,SAAAe,GAAI,OAC/CA,EAAKpD,KAAOA,EAAK,KAAOoD,KAI1B,OAAO,EAAP,GACKY,EADL,CAEErG,MAAM,GAAD,mBAAMqG,EAAMrG,OAAZ,CAAmB4G,IACxBV,QAASW,K,8NC7Gb,IA0HeC,EA1HS,SAAAjC,GACtB,IAD6B,EAWHkC,qBAAWC,EAVhB,CACnBhH,MAAO,GACPkG,QAAS,GACT3B,WAAY,CACVH,aAAc,GACdD,YAAa,GAEfzD,KAAM,OARqB,mBAWtB2F,EAXsB,KAWfY,EAXe,KAc7BvF,qBAAU,WACR,IAAM1B,EAAQkH,KAAKC,MAAMC,OAAOC,aAAaC,QAAQzC,IAEjD7E,GACFiH,EAAS,CACPpE,KpBpCkB,YoBqClB0D,QAASvG,MAGZ,IAGH0B,qBAAU,WACR,IAAMwE,EAAUgB,KAAKC,MAAMC,OAAOC,aAAaC,QAApB,UAA+BzC,EAA/B,cAEvBqB,GACFe,EAAS,CACPpE,KpB1C0B,qBoB2C1B0D,QAASL,MAGZ,IAoFH,MAAO,CAACG,EAlFQ,SAAAjE,GACd,IAAIsE,EAAa,sBAAOL,EAAMrG,OAAb,CAAoBoC,IAErCgF,OAAOC,aAAaE,QAAQ1C,EAAKqC,KAAKM,UAAUd,IAEhDO,EAAS,CAAEpE,KpB5DS,WoB4DO0D,QAASnE,KAsBnB,SAAAC,GAEjB,IAAIqE,EAAgB,YAAIL,EAAMrG,OAAO0E,QAAO,SAAAtC,GAC1C,OAAIA,EAAKC,KAAOA,EACP,KAEAD,KAIXgF,OAAOC,aAAaE,QAAQ1C,EAAKqC,KAAKM,UAAUd,IAGhDO,EAAS,CAAEpE,KpB5FY,coB4FO0D,QAASlE,KAhCtB,SAAAA,GAEjB,IAAIqE,EAAgB,YAAIL,EAAMrG,OAAO4E,KAAI,SAAAxC,GACvC,OAAIA,EAAKC,KAAOA,E,yVACP,IACFD,EADL,CAEEM,YAAaN,EAAKM,aAGbN,KAIXgF,OAAOC,aAAaE,QAAQ1C,EAAKqC,KAAKM,UAAUd,IAGhDO,EAAS,CAAEpE,KpB7EY,coB6EO0D,QAASlE,KAmBrB,SAAAA,GAClB,IAAMyB,EAAcuC,EAAMrG,MAAM0E,QAAO,SAAAtC,GAAI,OAAIA,EAAKC,KAAOA,KAAI,GAEzDoF,EAAc,sBAAOpB,EAAMH,SAAb,CAAsBpC,IAEpC4D,EAAe,YAAIrB,EAAMrG,OAAO0E,QAAO,SAAAe,GAAI,OAAIA,EAAKpD,KAAOA,KAEjE+E,OAAOC,aAAaE,QAApB,UACK1C,EADL,YAEEqC,KAAKM,UAAUC,IAGjBL,OAAOC,aAAaE,QAApB,UAA+B1C,GAAOqC,KAAKM,UAAUE,IAErDT,EAAS,CAAEpE,KpB1GiB,mBoB0GO0D,QAASlE,KAG1B,SAAAA,GAClB,IAAMuE,EAAcP,EAAMH,QAAQxB,QAAO,SAAAe,GAAI,OAAIA,EAAKpD,KAAOA,KAAI,GACjEuE,EAAYlE,YAAa,EACzB,IAAM+E,EAAiBpB,EAAMH,QAAQxB,QAAO,SAAAe,GAAI,OAAIA,EAAKpD,KAAOA,KAC1DqF,EAAY,sBAAOrB,EAAMrG,OAAb,CAAoB4G,IAEtCQ,OAAOC,aAAaE,QAApB,UACK1C,EADL,YAEEqC,KAAKM,UAAUC,IAGjBL,OAAOC,aAAaE,QAApB,UAA+B1C,GAAOqC,KAAKM,UAAUE,IAErDT,EAAS,CAACpE,KpBxHW,YoBwHM0D,QAASlE,KAGf,SAAAsC,GACrBsC,EAAS,CAACpE,KpBxHkB,mBoBwHM0D,QAAS5B,KAGzB,SAAAjE,GAAI,OAAIuG,EAAS,CAACpE,KpB1HhB,WoB0HgC0D,QAAS7F,OCtElDiH,MAlDf,WACE,IADa,EAWTb,EAVoB,qBADX,mBAGXT,EAHW,KAIXpG,EAJW,KAKX4D,EALW,KAMXD,EANW,KAOXE,EAPW,KAQXiC,EARW,KASXf,EATW,KAUXvE,EAVW,KAab,OACE,kBAAC,EAAamH,SAAd,CACE9F,MAAO,CACL9B,MAAOqG,EAAMrG,MACbkG,QAASG,EAAMH,QACf3B,WAAY8B,EAAM9B,WAClB7D,KAAM2F,EAAM3F,KACZT,UACA2D,aACAC,aACAC,cACAiC,cACAf,iBACAvE,gBAGF,kBAAC,IAAD,KACE,yBAAKd,UAAU,eACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkI,KAAMpI,EAAUI,OAAK,GAC1B,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOgI,KAAI,UAAKpI,EAAL,aAA0BI,OAAK,GACxC,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOgI,KAAI,UAAKpI,EAAL,YAAyBI,OAAK,GACvC,kBAAC,EAAD,QAGJ,kBAAC,EAAD,UC9CUiI,QACW,cAA7BV,OAAOW,SAASC,UAEe,UAA7BZ,OAAOW,SAASC,UAEhBZ,OAAOW,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.ac20a2ae.chunk.js","sourcesContent":["export const ADD_TODO = 'ADD_TODO';\nexport const LOAD_TODOS = 'GET_TODOS';\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\nexport const REMOVE_TODO = \"REMOVE_TODO\";\n\n// archive\nexport const ADD_TODO_ARCHIVE = \"ADD_TODO_ARCHIVE\";\nexport const LOAD_TODOS_ARCHIVE = \"LOAD_TODOS_ARCHIVE\";\nexport const BACK_TODO = \"BACK_TODO\";\n\nexport const BASE_URL = \"/quick-todos\"\n\nexport const SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nexport const SET_LANG = \"SET_LANG\";\n\n\n\n","import Header from './Header'\n\nexport default Header","import React from 'react';\nimport { FaClipboardList, FaPlusSquare, FaFileArchive } from \"react-icons/fa\";\nimport { NavLink } from 'react-router-dom'\nimport { BASE_URL } from '../../types'\n\nconst Header = () => {\n  return (\n    <nav className=\"l-header\">\n      <ul>\n        <li>\n          <NavLink to={BASE_URL} exact activeClassName=\"is-link-active\">\n            <FaClipboardList />\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            to={`${BASE_URL}/add-todo`}\n            exact\n            activeClassName=\"is-link-active\"\n          >\n            <FaPlusSquare />\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            to={`${BASE_URL}/archive`}\n            exact\n            activeClassName=\"is-link-active\"\n          >\n            <FaFileArchive />\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Header;","// export context\nimport { createContext } from 'react';\n\nexport default createContext({\n    todos: [],\n    addTodo: () => {},\n    deleteTodo: () => {},\n    getTodos: () => {}\n})","import Footer from './Footer'\n\nexport default Footer","import React, { useContext } from 'react';\nimport TodosContext from \"../../context/todosContext\";\n\n\nconst Footer = () => {\n    const context = useContext(TodosContext)\n\n  return (\n    <div className=\"l-footer\">\n      <div className=\"l-container\">\n        <div className=\"l-lang\">\n          <ul>\n            <li>\n              <span\n                onClick={() => context.setLanguage(\"rs\")}\n                className={\n                  context.lang === \"rs\"\n                    ? \"m-active-lang lang-link\"\n                    : \"lang-link\"\n                }\n              >\n                Srpski\n              </span>\n            </li>\n            <li>|</li>\n            <li>\n              <span\n                onClick={() => context.setLanguage(\"en\")}\n                className={\n                  context.lang === \"en\"\n                    ? \"m-active-lang lang-link\"\n                    : \"lang-link\"\n                }\n              >\n                English\n              </span>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;","import React, { useContext, useRef, useState, useEffect } from 'react';\nimport { FaPlus } from 'react-icons/fa'\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from \"react-toasts\"\nimport LocalizedStrings from \"react-localization\";\nimport { withRouter } from 'react-router-dom'\nimport todosContext from '../../context/todosContext'\n\n\nconst AddTodoForm = (props) => {\n\n  let strings = new LocalizedStrings({\n    en: {\n      addToList: \"Added to the list!\",\n      inputPlaceholderAdd: \"enter task\",\n      emptyField: \"empty field!\"\n    },\n    rs: {\n      addToList: \"Dodato u listu!\",\n      inputPlaceholderAdd: \"unesi stavku\",\n      emptyField: \"prazno polje!\"\n    }\n  });\n\n    const context = useContext(todosContext);\n    const inputRef = useRef('');\n    const [error, setError] = useState(null);\n\n    strings.setLanguage(context.lang)\n\n    useEffect(() => {\n      inputRef.current.focus();\n    }, [])\n\n    const onSubmitHandler = event => {\n        event.preventDefault();\n        setError(null);\n\n        const error = validate();\n\n        if(error.length) {\n            return setError(error);\n        }\n\n        let todo = {}\n        todo.id = Math.round(Math.random() * 1000);\n        todo.name = inputRef.current.value;\n        todo.isComplete = false;\n\n        context.addTodo(todo)\n        inputRef.current.value = null\n        inputRef.current.focus();\n        ToastsStore.success(strings.addToList);\n    }\n\n    const validate = () => {\n        let error = inputRef.current.value.length === 0 ? strings.emptyField : '';\n\n        return error;\n    }\n\n    const errorCss = {\n      borderColor: \"red\"\n    }\n\n    return (\n      <div className=\"l-add-todo\">\n        <form noValidate onSubmit={onSubmitHandler}>\n          <input\n            type=\"text\"\n            placeholder={strings.inputPlaceholderAdd}\n            ref={inputRef}\n            style={error && errorCss}\n          />\n          <span className=\"m-inline-error\" style={{ whiteSpace: \"pre-wrap\" }}>\n            {error}\n          </span>\n          <button className=\"m-button green\" type=\"submit\">\n            <FaPlus />\n          </button>\n        </form>\n        <ToastsContainer\n          store={ToastsStore}\n          position={ToastsContainerPosition.TOP_RIGHT}\n        />\n      </div>\n    );\n}\n\nexport default withRouter(AddTodoForm);","import React, { useContext } from \"react\";\nimport {\n  ToastsContainer,\n  ToastsStore,\n  ToastsContainerPosition\n} from \"react-toasts\";\nimport LocalizedStrings from \"react-localization\";\n\nimport {\n  FaMinusCircle,\n  FaFileArchive,\n  FaCheckCircle,\n  FaRegCircle\n} from \"react-icons/fa\";\nimport todosContext from \"../../../context/todosContext\";\n\nconst Todo = props => {\n  let strings = new LocalizedStrings({\n    en: {\n      itemDeleted: \"Item is deleted!\",\n      itemArchived: \"Item is archived!\"\n    },\n    rs: {\n      itemDeleted: \"Stavka je obrisana!\",\n      itemArchived: \"Stavka je arhivirana!\"\n    }\n  });\n\n  const context = useContext(todosContext);\n\nstrings.setLanguage(context.lang);\n\n  const handleRemoveTodo = () => {\n    context.removeTodo(props.id);\n    ToastsStore.error(strings.itemDeleted);\n  };\n\n  const handleArchiveTodo = () => {\n    context.archiveTodo(props.id);\n    ToastsStore.info(strings.itemArchived);\n  };\n\n  return (\n    <div className=\"m-todo\">\n      <label>\n        <input\n          type=\"checkbox\"\n          checked={props.isComplete}\n          onChange={() => context.toggleTodo(props.id)}\n        />\n        <span className=\"m-unchecked m-checkbox-icon\">\n          <FaRegCircle />\n        </span>\n        <span className=\"m-checked m-checkbox-icon\">\n          <FaCheckCircle />\n        </span>\n\n        {props.name}\n      </label>\n      <button className=\"m-button red\" onClick={handleRemoveTodo}>\n        <FaMinusCircle />\n      </button>\n      <button className=\"m-button green\" onClick={handleArchiveTodo}>\n        <FaFileArchive />\n      </button>\n      <ToastsContainer\n        store={ToastsStore}\n        position={ToastsContainerPosition.TOP_RIGHT}\n      />\n    </div>\n  );\n};\n\nexport default Todo;\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport LocalizedStrings from \"react-localization\";\nimport todosContext from \"../../context/todosContext\";\nimport Todo from \"../../components/TodosList/Todo/Todo\";\nimport { BASE_URL } from \"../../types\";\n\nconst TodosList = () => {\n  let strings = new LocalizedStrings({\n    en: {\n      emptyList: \"List is empty.\",\n      addItem: \"Add todo\"\n    },\n    rs: {\n      emptyList: \"Lista je prazna.\",\n      addItem: \"Dodaj stavku\"\n    }\n  });\n\n  const context = useContext(todosContext);\n  strings.setLanguage(context.lang);\n\n  let todos = (\n    <div className=\"l-empty-list\">\n      <p>{strings.emptyList}</p>\n      <Link to={`${BASE_URL}/add-todo`}>{strings.addItem}</Link>\n    </div>\n  );\n\n  const _getCurrentPageIndex = (currentPage, itemsPerPage) => {\n    let _start = currentPage * itemsPerPage,\n      _end = _start + itemsPerPage - 1;\n\n    return [_start, _end];\n  };\n\n  const [startIndex, endIndex] = _getCurrentPageIndex(\n    context.pagination.currentPage,\n    context.pagination.itemsPerPage\n  );\n\n  if (context.todos.length) {\n    todos = context.todos\n      .filter((todo, index) => index >= startIndex && index <= endIndex)\n      .map(todo => <Todo key={todo.id} {...todo} />);\n  }\n\n  return <div className=\"l-todos\">{todos}</div>;\n};\n\nexport default TodosList;\n","import Button from './Button'\n\nexport default Button","import React, { useContext } from \"react\";\nimport TodosContext from \"../../context/todosContext\";\n\nconst Button = ({ index }) => {\n  const context = useContext(TodosContext);\n\n  const isCurrent = index === context.pagination.currentPage;\n\n  return (\n    <button\n      className={isCurrent ? \"current btn-pagination\" : \"btn-pagination\"}\n      onClick={() => context.setCurrentPage(index)}\n    >\n      {index + 1}\n    </button>\n  );\n};\n\nexport default Button;\n","import Pagination from './Pagination'\n\nexport default Pagination","import React, { useContext } from 'react';\nimport TodosContext from '../../context/todosContext'\nimport Button from '../Button'\n\nconst Pagination = () => {\n\n  const context = useContext(TodosContext)\n\n  const makeButtons = num => {\n    const buttons = new Array(num).fill('').map((item, index) => <Button key={index} index={index}/>)\n\n    return buttons\n  }\n\n  const calculateTotalPages = () => {\n    let total = 0\n    const todos_count = context.todos.length\n    const itemsPerPage = context.pagination.itemsPerPage\n\n    total =\n      todos_count % itemsPerPage !== 0\n        ? Math.floor(todos_count / itemsPerPage) + 1\n        : Math.floor(todos_count / itemsPerPage);\n\n    return total\n  }\n\n  const buttons = makeButtons(calculateTotalPages());\n\n  return(\n    <div className=\"l-pagination\">\n      {buttons}\n    </div>\n  )\n}\n\nexport default Pagination;","import Homepage from './Homepage'\n\nexport default Homepage","import React, { useContext } from \"react\";\nimport TodosList from \"../../TodosList/TodosList\";\nimport Pagination from \"../../Pagination\";\nimport TodosContext from \"../../../context/todosContext\";\n\nconst Homepage = () => {\n  const context = useContext(TodosContext);\n\n  const _isPagination = () => {\n    return context.todos.length <= context.pagination.itemsPerPage\n      ? false\n      : true;\n  };\n\n  return (\n    <>\n      <TodosList />\n      {_isPagination() && <Pagination />}\n    </>\n  );\n};\n\nexport default Homepage;\n","import React, { useContext } from \"react\";\nimport {\n  ToastsContainer,\n  ToastsStore,\n  ToastsContainerPosition\n} from \"react-toasts\";\nimport LocalizedStrings from \"react-localization\";\nimport { FaUndoAlt } from \"react-icons/fa\";\nimport todosContext from \"../../../context/todosContext\";\n\nconst ArchiveItem = props => {\n  let strings = new LocalizedStrings({\n    en: {\n      revertedToList: \"Reverted to main list!\"\n    },\n    rs: {\n      revertedToList: \"Vraceno u listu!\"\n    }\n  });\n\n  const context = useContext(todosContext);\n\n  strings.setLanguage(context.lang);\n\n  const handleBackFromArchive = () => {\n    ToastsStore.warning(strings.revertedToList);\n\n    props.length === 1\n      ? setTimeout(() => {\n          context.backToTodos(props.id);\n        }, 800)\n      : context.backToTodos(props.id);\n  };\n\n  return (\n    <li>\n      <div className=\"l-archive-item\">\n        <span>{props.name}</span>\n        <button className=\"m-button blue\" onClick={handleBackFromArchive}>\n          <FaUndoAlt />\n        </button>\n      </div>\n      <ToastsContainer\n        store={ToastsStore}\n        position={ToastsContainerPosition.TOP_RIGHT}\n      />\n    </li>\n  );\n};\n\nexport default ArchiveItem;\n","import React, { useContext } from \"react\";\nimport { ToastsContainer, ToastsStore } from \"react-toasts\";\nimport LocalizedStrings from \"react-localization\";\nimport todosContext from \"../../context/todosContext\";\nimport ArchiveItem from \"./ArchiveItem/ArchiveItem\";\n\nconst Archive = () => {\n  let strings = new LocalizedStrings({\n    en: {\n      emptyArchive: \"Archive is empty!\"\n    },\n    rs: {\n      emptyArchive: \"Arhiva je prazna!\"\n    }\n  });\n\n  const context = useContext(todosContext);\n  strings.setLanguage(context.lang)\n\n  return (\n    <>\n      <ul className=\"l-archive\">\n        {context.archive.length ? (\n          context.archive.map((item, index) => (\n            <ArchiveItem\n              key={index}\n              {...item}\n              length={context.archive.length}\n            />\n          ))\n        ) : (\n          <div>{strings.emptyArchive}</div>\n        )}\n      </ul>\n    </>\n  );\n};\n\nexport default Archive;\n","import ArchivePage from './ArchivePage'\n\nexport default ArchivePage","import React from 'react';\nimport Archive from '../../Archive/Archive';\n\nconst ArchivePage = () => {\n  return(\n    <>\n      <Archive />\n    </>\n  )\n}\n\nexport default ArchivePage;","import { ADD_TODO, LOAD_TODOS, TOGGLE_TODO, REMOVE_TODO, ADD_TODO_ARCHIVE, LOAD_TODOS_ARCHIVE, BACK_TODO, SET_CURRENT_PAGE, SET_LANG } from \"../types\";\n\nconst initialState = {\n  todos: [],\n  archive: [],\n  pagination: {\n    itemsPerPage: 5,\n    currentPage: 0\n  },\n  lang: 'sr'\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return {\n        ...state,\n        todos: [...state.todos, action.payload]\n      };\n    case LOAD_TODOS:\n      return {\n        ...state,\n        todos: action.payload\n      };\n    case TOGGLE_TODO:\n      return toggleTodo(state, action.payload);\n    case REMOVE_TODO:\n      return removeTodo(state, action.payload);\n    case ADD_TODO_ARCHIVE:\n      return addTodoArchive(state, action.payload);\n    case LOAD_TODOS_ARCHIVE:\n      return {\n        ...state,\n        archive: action.payload\n      };\n    case BACK_TODO:\n      return backTodo(state, action.payload);\n    case SET_CURRENT_PAGE:\n      return {\n        ...state,\n        pagination: {\n          ...state.pagination,\n          currentPage: action.payload\n        }\n      }\n    case SET_LANG:\n      return {\n        ...state,\n        lang: action.payload\n      }\n    default:\n      return state;\n  }\n};\n\nconst toggleTodo = (state, id) => {\n  let updated_todos = state.todos.map(todo => {\n    if(todo.id === id) {\n      return {\n        ...todo,\n        isComplete: !todo.isComplete\n      }\n    } else {\n      return todo\n    }\n  })\n\n  return {\n    ...state,\n    todos: updated_todos\n  }\n}\n\nconst removeTodo = (state, id) => {\n  let updated_todos = state.todos.filter(todo => {\n    if (todo.id === id) {\n      return null\n    } else {\n      return todo;\n    }\n  });\n\n  const pagination = state.pagination\n\n  let updateCurrentPage =\n    updated_todos.length % pagination.itemsPerPage === 0\n      ? pagination.currentPage - 1\n      : pagination.currentPage;\n\n  return {\n    ...state,\n    todos: updated_todos,\n    pagination: {...state.pagination, currentPage: updateCurrentPage}\n  };\n};\n\nconst addTodoArchive = (state, id) => {\n  const archiveTodo = state.todos.filter(todo => todo.id === id)[0];\n\n  const updated_todos = state.todos.filter(item => item.id === id ? null : item);\n\n    const pagination = state.pagination;\n\n    let updateCurrentPage =\n      updated_todos.length % pagination.itemsPerPage === 0\n        ? pagination.currentPage - 1\n        : pagination.currentPage;\n\n  return {\n    ...state,\n    todos: updated_todos,\n    archive: [...state.archive, archiveTodo],\n    pagination: { ...state.pagination, currentPage: updateCurrentPage }\n  };\n}\n\nconst backTodo = (state, id) => {\n\n  const currentTodo = state.archive.filter(todo => todo.id === id)[0];\n  const updated_archive = state.archive.filter(item =>\n    item.id === id ? null : item\n  );\n\n\n  return {\n    ...state,\n    todos: [...state.todos, currentTodo],\n    archive: updated_archive\n  }\n}\n","import { useReducer, useEffect } from \"react\";\nimport todosReducer from \"../reducers/todosReducer\";\nimport {\n  ADD_TODO,\n  LOAD_TODOS,\n  TOGGLE_TODO,\n  REMOVE_TODO,\n  ADD_TODO_ARCHIVE,\n  LOAD_TODOS_ARCHIVE,\n  BACK_TODO,\n  SET_CURRENT_PAGE,\n  SET_LANG\n} from \"../types\";\n\n/*\n    razmisljanje o generalizaciji problema\n*/\n\nconst useLocalStorage = key => {\n  const initialState = {\n    todos: [],\n    archive: [],\n    pagination: {\n      itemsPerPage: 10,\n      currentPage: 0\n    },\n    lang: 'rs'\n  };\n\n  const [state, dispatch] = useReducer(todosReducer, initialState);\n\n  // load todos from local storage\n  useEffect(() => {\n    const todos = JSON.parse(window.localStorage.getItem(key));\n\n    if (todos) {\n      dispatch({\n        type: LOAD_TODOS,\n        payload: todos\n      });\n    }\n  }, []);\n\n  // load archive\n  useEffect(() => {\n    const archive = JSON.parse(window.localStorage.getItem(`${key}-archive`));\n\n    if (archive) {\n      dispatch({\n        type: LOAD_TODOS_ARCHIVE,\n        payload: archive\n      });\n    }\n  }, []);\n\n  const addTodo = todo => {\n    let updated_todos = [...state.todos, todo];\n\n    window.localStorage.setItem(key, JSON.stringify(updated_todos));\n\n    dispatch({ type: ADD_TODO, payload: todo });\n  };\n\n  const toggleTodo = id => {\n    // update local storage\n    let updated_todos = [...state.todos].map(todo => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          isComplete: !todo.isComplete\n        };\n      } else {\n        return todo;\n      }\n    });\n\n    window.localStorage.setItem(key, JSON.stringify(updated_todos));\n\n    // dispatch action\n    dispatch({ type: TOGGLE_TODO, payload: id });\n  };\n\n  const removeTodo = id => {\n    // update local storage\n    let updated_todos = [...state.todos].filter(todo => {\n      if (todo.id === id) {\n        return null;\n      } else {\n        return todo;\n      }\n    });\n\n    window.localStorage.setItem(key, JSON.stringify(updated_todos));\n\n    // dispatch action\n    dispatch({ type: REMOVE_TODO, payload: id });\n  };\n\n  const archiveTodo = id => {\n    const archiveTodo = state.todos.filter(todo => todo.id === id)[0];\n\n    const updatedArchive = [...state.archive, archiveTodo];\n\n    const updatedTodos = [...state.todos].filter(item => item.id !== id);\n\n    window.localStorage.setItem(\n      `${key}-archive`,\n      JSON.stringify(updatedArchive)\n    );\n\n    window.localStorage.setItem(`${key}`, JSON.stringify(updatedTodos));\n\n    dispatch({ type: ADD_TODO_ARCHIVE, payload: id });\n  };\n\n  const backToTodos = id => {\n    const currentTodo = state.archive.filter(item => item.id === id)[0];\n    currentTodo.isComplete = false;\n    const updatedArchive = state.archive.filter(item => item.id !== id);\n    const updatedTodos = [...state.todos, currentTodo];\n\n    window.localStorage.setItem(\n      `${key}-archive`,\n      JSON.stringify(updatedArchive)\n    );\n\n    window.localStorage.setItem(`${key}`, JSON.stringify(updatedTodos));\n\n    dispatch({type: BACK_TODO, payload: id})\n  };\n\n  const setCurrentPage = index => {\n    dispatch({type: SET_CURRENT_PAGE, payload: index})\n  }\n\n  const setLanguage = lang => dispatch({type: SET_LANG, payload: lang})\n\n  return [state, addTodo, removeTodo, toggleTodo, archiveTodo, backToTodos, setCurrentPage, setLanguage];\n};\n\nexport default useLocalStorage;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./styles/styles.scss\";\n\nimport Header from \"./components/Header\";\nimport Footer from './components/Footer'\nimport AddTodoForm from \"./components/AddTodoForm/AddTodoForm\";\nimport Homepage from \"./components/pages/Homepage\";\nimport ArchivePage from \"./components/pages/ArchivePage\";\n\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport TodosContext from \"./context/todosContext\";\n\nimport { BASE_URL } from './types'\n\nfunction App() {\n  const localStorageKey = \"custom-hook-todos\";\n  const [\n    state,\n    addTodo,\n    removeTodo,\n    toggleTodo,\n    archiveTodo,\n    backToTodos,\n    setCurrentPage,\n    setLanguage\n  ] = useLocalStorage(localStorageKey);\n\n  return (\n    <TodosContext.Provider\n      value={{\n        todos: state.todos,\n        archive: state.archive,\n        pagination: state.pagination,\n        lang: state.lang,\n        addTodo,\n        toggleTodo,\n        removeTodo,\n        archiveTodo,\n        backToTodos,\n        setCurrentPage,\n        setLanguage\n      }}\n    >\n      <Router>\n        <div className=\"l-container\">\n          <Header />\n          <Switch>\n            <Route path={BASE_URL} exact>\n              <Homepage />\n            </Route>\n            <Route path={`${BASE_URL}/add-todo`} exact>\n              <AddTodoForm />\n            </Route>\n            <Route path={`${BASE_URL}/archive`} exact>\n              <ArchivePage />\n            </Route>\n          </Switch>\n          <Footer />\n        </div>\n      </Router>\n    </TodosContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}