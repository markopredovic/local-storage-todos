{"version":3,"sources":["components/Title/Title.js","context/todosContext.js","components/AddTodoForm/AddTodoForm.js","components/TodosList/Todo/Todo.js","components/TodosList/TodosList.js","components/Archive/ArchiveItem/ArchiveItem.js","components/Archive/Archive.js","reducers/todosReducer.js","types.js","hooks/useLocalStorage.js","App.js","serviceWorker.js","index.js"],"names":["Title","title","createContext","todos","addTodo","deleteTodo","getTodos","AddTodoForm","context","useContext","todosContext","inputRef","useRef","noValidate","onSubmit","event","preventDefault","todo","id","Math","round","random","name","current","value","isComplete","type","placeholder","ref","Todo","props","checked","onChange","toggleTodo","onClick","removeTodo","style","marginLeft","fontSize","color","archiveTodo","TodosList","map","key","ArchiveItem","backToTodos","Archive","useState","toggle","setToggle","console","log","archive","item","length","marginTop","display","initialState","state","action","payload","addTodoArchive","backTodo","updated_todos","filter","currentTodo","updated_archive","useLocalStorage","useReducer","todosReducer","dispatch","useEffect","JSON","parse","window","localStorage","getItem","setItem","stringify","updatedArchive","updatedTodos","App","Provider","className","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0a95e802.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = ({title}) => {\n    return(\n        <h1>{title}</h1>\n    )\n}\n\nexport default Title;","// export context\nimport { createContext } from 'react';\n\nexport default createContext({\n    todos: [],\n    addTodo: () => {},\n    deleteTodo: () => {},\n    getTodos: () => {}\n})","import React, { useContext, useRef } from 'react';\nimport todosContext from '../../context/todosContext'\n\nconst AddTodoForm = () => {\n\n    const context = useContext(todosContext);\n    const inputRef = useRef('');\n\n    const onSubmitHandler = event => {\n        event.preventDefault();\n\n        let todo = {}\n        todo.id = Math.round(Math.random() * 1000);\n        todo.name = inputRef.current.value;\n        todo.isComplete = false;\n\n        context.addTodo(todo)\n        inputRef.current.value = null\n    }\n\n    return(\n        <div>\n            <form noValidate onSubmit={onSubmitHandler}>\n                <input type=\"text\" placeholder=\"add new todo\" ref={inputRef} />\n                <button type=\"submit\">Submit</button>\n            </form>\n        </div>\n    )\n}\n\nexport default AddTodoForm;","import React, { useContext } from 'react';\nimport todosContext from '../../../context/todosContext';\n\n\nconst Todo = (props) => {\n\n    const context = useContext(todosContext);\n\n    return (\n      <div>\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={props.isComplete}\n            onChange={() => context.toggleTodo(props.id)}\n          />\n          {props.name}\n        </label>\n        <button onClick={() => context.removeTodo(props.id)} style={{marginLeft: '10px', fontSize: '10px', color: 'red'}}>remove</button>\n        <button onClick={() => context.archiveTodo(props.id)} style={{marginLeft: '10px', fontSize: '10px', color: 'green'}}>archive</button>\n      </div>\n    );\n}\n\nexport default Todo;","import React, { useContext } from 'react';\nimport todosContext from '../../context/todosContext';\nimport Todo from '../../components/TodosList/Todo/Todo'\n\nconst TodosList = () => {\n\n    const context = useContext(todosContext);\n\n    const todos = context.todos.map(todo => <Todo key={todo.id} {...todo} />)\n\n    return(\n        <div>\n            {todos}\n        </div>\n    )\n}\n\nexport default TodosList;","import React, { useContext } from 'react';\nimport todosContext from '../../../context/todosContext'\n\nconst ArchiveItem = (props) => {\n\n    const context = useContext(todosContext);\n\n    return (\n      <li>\n        <div>{props.name}\n        <button onClick={() => context.backToTodos(props.id)}>back to todos</button>\n        </div>\n      </li>\n    );\n}\n\nexport default ArchiveItem;","import React, { useContext, useState } from \"react\";\nimport todosContext from \"../../context/todosContext\";\nimport ArchiveItem from \"./ArchiveItem/ArchiveItem\";\n\nconst Archive = () => {\n  const context = useContext(todosContext);\n  const [toggle, setToggle] = useState(false);\n\n  console.log(\"context:\", context);\n\n  const archive = context.archive.map(item => (\n    <ArchiveItem key={item.key} {...item} />\n  ));\n\n  console.log(\"archive:\", archive);\n\n  return (\n    <>\n      {archive.length ? (\n        <div style={{ marginTop: \"20px\" }}>\n          <button onClick={() => setToggle(!toggle)}>\n            {toggle ? \"Hide\" : \"Show\"} archive\n          </button>\n          <div style={{ display: toggle ? \"block\" : \"none\" }}>{archive}</div>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default Archive;\n","import { ADD_TODO, LOAD_TODOS, TOGGLE_TODO, REMOVE_TODO, ADD_TODO_ARCHIVE, LOAD_TODOS_ARCHIVE, BACK_TODO } from \"../types\";\n\nconst initialState = {\n  todos: [],\n  archive: []\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return {\n        ...state,\n        todos: [...state.todos, action.payload]\n      };\n    case LOAD_TODOS:\n      return {\n        ...state,\n        todos: action.payload\n      };\n    case TOGGLE_TODO:\n      return toggleTodo(state, action.payload);\n    case REMOVE_TODO:\n      return removeTodo(state, action.payload);\n    case ADD_TODO_ARCHIVE:\n      return addTodoArchive(state, action.payload);\n    case LOAD_TODOS_ARCHIVE:\n      return {\n        ...state,\n        archive: action.payload\n      };\n    case BACK_TODO:\n      return backTodo(state, action.payload);\n    default:\n      return state;\n  }\n};\n\nconst toggleTodo = (state, id) => {\n  let updated_todos = state.todos.map(todo => {\n    if(todo.id === id) {\n      return {\n        ...todo,\n        isComplete: !todo.isComplete\n      }\n    } else {\n      return todo\n    }\n  })\n\n  return {\n    ...state,\n    todos: updated_todos\n  }\n}\n\nconst removeTodo = (state, id) => {\n  let updated_todos = state.todos.filter(todo => {\n    if (todo.id === id) {\n      return null\n    } else {\n      return todo;\n    }\n  });\n\n  console.log(\"Remove todo: \", updated_todos);\n\n  return {\n    ...state,\n    todos: updated_todos\n  };\n};\n\nconst addTodoArchive = (state, id) => {\n  const archiveTodo = state.todos.filter(todo => todo.id === id)[0];\n\n  console.log(\"archiveTodo\", archiveTodo);\n\n  const updated_todos = state.todos.filter(item => item.id === id ? null : item);\n  \n  return {\n    ...state,\n    todos: updated_todos,\n    archive: [...state.archive, archiveTodo]\n  };\n}\n\nconst backTodo = (state, id) => {\n  \n  const currentTodo = state.archive.filter(todo => todo.id === id)[0];\n  const updated_archive = state.archive.filter(item =>\n    item.id === id ? null : item\n  );\n  \n  return {\n    ...state,\n    todos: [...state.todos, currentTodo],\n    archive: updated_archive\n  }\n}\n","export const ADD_TODO = 'ADD_TODO';\nexport const LOAD_TODOS = 'GET_TODOS';\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\nexport const REMOVE_TODO = \"REMOVE_TODO\";\n\n// archive\nexport const ADD_TODO_ARCHIVE = \"ADD_TODO_ARCHIVE\";\nexport const LOAD_TODOS_ARCHIVE = \"LOAD_TODOS_ARCHIVE\";\nexport const BACK_TODO = \"BACK_TODO\";\n\n\n\n","import { useReducer, useEffect } from \"react\";\nimport todosReducer from \"../reducers/todosReducer\";\nimport {\n  ADD_TODO,\n  LOAD_TODOS,\n  TOGGLE_TODO,\n  REMOVE_TODO,\n  ADD_TODO_ARCHIVE,\n  LOAD_TODOS_ARCHIVE,\n  BACK_TODO\n} from \"../types\";\n\n/*\n    razmisljanje o generalizaciji problema\n*/\n\nconst useLocalStorage = key => {\n  const initialState = {\n    todos: [],\n    archive: []\n  };\n\n  const [state, dispatch] = useReducer(todosReducer, initialState);\n\n  // load todos from local storage\n  useEffect(() => {\n    console.log(\"use effect 1\");\n    const todos = JSON.parse(window.localStorage.getItem(key));\n\n    if (todos) {\n      dispatch({\n        type: LOAD_TODOS,\n        payload: todos\n      });\n    }\n  }, []);\n\n  // load archive\n  useEffect(() => {\n    console.log(\"use effect 2\");\n\n    const archive = JSON.parse(window.localStorage.getItem(`${key}-archive`));\n\n    console.log(\"archive\", archive);\n\n    if (archive) {\n      dispatch({\n        type: LOAD_TODOS_ARCHIVE,\n        payload: archive\n      });\n    }\n  }, []);\n\n  const addTodo = todo => {\n    let updated_todos = [...state.todos, todo];\n\n    window.localStorage.setItem(key, JSON.stringify(updated_todos));\n\n    dispatch({ type: ADD_TODO, payload: todo });\n  };\n\n  const toggleTodo = id => {\n    // update local storage\n    let updated_todos = [...state.todos].map(todo => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          isComplete: !todo.isComplete\n        };\n      } else {\n        return todo;\n      }\n    });\n\n    window.localStorage.setItem(key, JSON.stringify(updated_todos));\n\n    // dispatch action\n    dispatch({ type: TOGGLE_TODO, payload: id });\n  };\n\n  const removeTodo = id => {\n    // update local storage\n    let updated_todos = [...state.todos].filter(todo => {\n      if (todo.id === id) {\n        return null;\n      } else {\n        return todo;\n      }\n    });\n\n    window.localStorage.setItem(key, JSON.stringify(updated_todos));\n\n    // dispatch action\n    dispatch({ type: REMOVE_TODO, payload: id });\n  };\n\n  const archiveTodo = id => {\n    const archiveTodo = state.todos.filter(todo => todo.id === id)[0];\n\n    const updatedArchive = [...state.archive, archiveTodo];\n\n    const updatedTodos = [...state.todos].filter(item => item.id !== id);\n\n    window.localStorage.setItem(\n      `${key}-archive`,\n      JSON.stringify(updatedArchive)\n    );\n\n    window.localStorage.setItem(`${key}`, JSON.stringify(updatedTodos));\n\n    dispatch({ type: ADD_TODO_ARCHIVE, payload: id });\n  };\n\n  const backToTodos = id => {\n    const currentTodo = state.archive.filter(item => item.id === id)[0];\n    currentTodo.isComplete = false;\n    const updatedArchive = state.archive.filter(item => item.id !== id);\n    const updatedTodos = [...state.todos, currentTodo];\n\n    window.localStorage.setItem(\n      `${key}-archive`,\n      JSON.stringify(updatedArchive)\n    );\n\n    window.localStorage.setItem(`${key}`, JSON.stringify(updatedTodos));\n\n    dispatch({type: BACK_TODO, payload: id})\n  };\n\n  return [state, addTodo, removeTodo, toggleTodo, archiveTodo, backToTodos];\n};\n\nexport default useLocalStorage;\n","import React from 'react';\nimport './App.css';\n\nimport Title from './components/Title/Title';\nimport AddTodoForm from './components/AddTodoForm/AddTodoForm';\nimport TodosList from './components/TodosList/TodosList';\nimport Archive from './components/Archive/Archive'\n\nimport useLocalStorage from './hooks/useLocalStorage';\nimport TodosContext from './context/todosContext';\n\n\n\nfunction App() {\n  const localStorageKey = \"custom-hook-todos\";\n  const [state, addTodo, removeTodo, toggleTodo, archiveTodo, backToTodos] = useLocalStorage(localStorageKey);\n  \n  return (\n    <TodosContext.Provider value={{todos: state.todos, archive: state.archive, addTodo, toggleTodo, removeTodo, archiveTodo, backToTodos}}>\n      <div className=\"App\">\n        <Title title=\"Todos\" />\n        <AddTodoForm />\n        <TodosList />\n        <Archive />\n      </div>\n    </TodosContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}