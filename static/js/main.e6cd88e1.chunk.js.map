{"version":3,"sources":["components/Header/index.js","components/Header/Header.js","context/todosContext.js","components/AddTodoForm/AddTodoForm.js","components/TodosList/Todo/Todo.js","components/TodosList/TodosList.js","components/pages/Homepage/index.js","components/pages/Homepage/Homepage.js","components/Archive/ArchiveItem/ArchiveItem.js","components/Archive/Archive.js","components/pages/ArchivePage/index.js","components/pages/ArchivePage/ArchivePage.js","reducers/todosReducer.js","types.js","hooks/useLocalStorage.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","exact","activeClassName","createContext","todos","addTodo","deleteTodo","getTodos","withRouter","props","context","useContext","todosContext","inputRef","useRef","useState","error","setError","validate","current","value","length","noValidate","onSubmit","event","preventDefault","todo","id","Math","round","random","name","isComplete","focus","ToastsStore","success","type","placeholder","ref","style","borderColor","whiteSpace","store","position","ToastsContainerPosition","TOP_LEFT","Todo","checked","onChange","toggleTodo","onClick","removeTodo","archiveTodo","info","TodosList","map","key","Homepage","ArchiveItem","backToTodos","warning","Archive","archive","item","ArchivePage","initialState","state","action","payload","addTodoArchive","backTodo","updated_todos","filter","console","log","currentTodo","updated_archive","useLocalStorage","useReducer","todosReducer","dispatch","useEffect","JSON","parse","window","localStorage","getItem","setItem","stringify","updatedArchive","updatedTodos","App","Provider","path","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e6cd88e1.chunk.js","sourcesContent":["import Header from './Header'\n\nexport default Header","import React from 'react';\nimport { FaClipboardList, FaPlusSquare, FaFileArchive } from \"react-icons/fa\";\nimport { NavLink } from 'react-router-dom'\n\nconst Header = () => {\n  return (\n    <nav className=\"l-header\">\n      <ul>\n        <li>\n          <NavLink\n            to=\"/local-storage-todos\"\n            exact\n            activeClassName=\"is-link-active\"\n          >\n            <FaClipboardList />\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            to=\"/local-storage-todos/add-todo\"\n            exact\n            activeClassName=\"is-link-active\"\n          >\n            <FaPlusSquare />\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            to=\"/local-storage-todos/archive\"\n            exact\n            activeClassName=\"is-link-active\"\n          >\n            <FaFileArchive />\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Header;","// export context\nimport { createContext } from 'react';\n\nexport default createContext({\n    todos: [],\n    addTodo: () => {},\n    deleteTodo: () => {},\n    getTodos: () => {}\n})","import React, { useContext, useRef, useState } from 'react';\nimport { FaPlus } from 'react-icons/fa'\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from \"react-toasts\"\nimport { withRouter } from 'react-router-dom'\nimport todosContext from '../../context/todosContext'\n\nconst AddTodoForm = (props) => {\n\n    const context = useContext(todosContext);\n    const inputRef = useRef('');\n    const [error, setError] = useState(null);\n\n    const onSubmitHandler = event => {\n        event.preventDefault();\n        setError(null);\n\n        const error = validate();\n\n        if(error.length) {\n            return setError(error);\n        }\n\n        let todo = {}\n        todo.id = Math.round(Math.random() * 1000);\n        todo.name = inputRef.current.value;\n        todo.isComplete = false;\n\n        context.addTodo(todo)\n        inputRef.current.value = null\n        inputRef.current.focus();\n        // props.history.push('/')\n        ToastsStore.success(\"Added to the list! \\n(Dodato u listu!)\");\n    }\n\n    const validate = () => {\n        let error = inputRef.current.value.length === 0 ? \"Text is empty! \\n(Tekst je prazan!)\" : '';\n\n        return error;\n    }\n\n    const errorCss = {\n      borderColor: \"red\"\n    }\n\n    return (\n      <div className=\"l-add-todo\">\n        <form noValidate onSubmit={onSubmitHandler}>\n          <input type=\"text\" placeholder=\"add (unesi)\" ref={inputRef} style={error && errorCss}/>\n          <span className=\"m-inline-error\" style={{whiteSpace: 'pre-wrap'}}>{error}</span>\n          <button className=\"m-button green\" type=\"submit\">\n            <FaPlus />\n          </button>\n        </form>\n        <ToastsContainer\n          store={ToastsStore}\n          position={ToastsContainerPosition.TOP_LEFT}\n        />\n      </div>\n    );\n}\n\nexport default withRouter(AddTodoForm);","import React, { useContext } from \"react\";\nimport { ToastsContainer, ToastsStore } from \"react-toasts\";\nimport {\n  FaMinusCircle,\n  FaFileArchive,\n  FaCheckCircle,\n  FaRegCircle\n} from \"react-icons/fa\";\nimport todosContext from \"../../../context/todosContext\";\n\nconst Todo = props => {\n  const context = useContext(todosContext);\n\n  const handleRemoveTodo = () => {\n    context.removeTodo(props.id);\n    ToastsStore.error(\"Item is deleted! \\n(Stavka je obrisana)\");\n  };\n\n  const handleArchiveTodo = () => {\n    context.archiveTodo(props.id);\n    ToastsStore.info(\"Item is archived! \\n(Stavka je arhivirana!)\");\n  };\n\n  return (\n    <div className=\"m-todo\">\n      <label>\n        <input\n          type=\"checkbox\"\n          checked={props.isComplete}\n          onChange={() => context.toggleTodo(props.id)}\n        />\n        <span className=\"m-unchecked m-checkbox-icon\">\n          <FaRegCircle />\n        </span>\n        <span className=\"m-checked m-checkbox-icon\">\n          <FaCheckCircle />\n        </span>\n\n        {props.name}\n      </label>\n      <button className=\"m-button red\" onClick={handleRemoveTodo}>\n        <FaMinusCircle />\n      </button>\n      <button className=\"m-button green\" onClick={handleArchiveTodo}>\n        <FaFileArchive />\n      </button>\n      <ToastsContainer store={ToastsStore} />\n    </div>\n  );\n};\n\nexport default Todo;\n","import React, { useContext } from 'react';\nimport todosContext from '../../context/todosContext'\nimport Todo from '../../components/TodosList/Todo/Todo'\n\nconst TodosList = () => {\n\n    const context = useContext(todosContext);\n\n    const todos = context.todos.map(todo => <Todo key={todo.id} {...todo} />)\n\n    return(\n        <div className=\"l-todos\">\n            {todos}\n        </div>\n    )\n}\n\nexport default TodosList;","import Homepage from './Homepage'\n\nexport default Homepage","import React from 'react';\nimport TodosList from '../../TodosList/TodosList';\n\nconst Homepage = () => {\n  return(\n    <>\n    <TodosList />\n    </>\n  )\n}\n\nexport default Homepage;","import React, { useContext } from \"react\";\nimport { ToastsContainer, ToastsStore } from \"react-toasts\";\nimport { FaUndoAlt } from \"react-icons/fa\";\nimport todosContext from \"../../../context/todosContext\";\n\nconst ArchiveItem = props => {\n  const context = useContext(todosContext);\n\n  const handleBackFromArchive = () => {\n    context.backToTodos(props.id);\n    ToastsStore.warning(\"Reverted to main list! \\n(Vraceno u listu!)\");\n  };\n\n  return (\n    <li>\n      <div className=\"l-archive-item\">\n        <span>{props.name}</span>\n        <button className=\"m-button blue\" onClick={handleBackFromArchive}>\n          <FaUndoAlt />\n        </button>\n      </div>\n      <ToastsContainer store={ToastsStore} />\n    </li>\n  );\n};\n\nexport default ArchiveItem;\n","import React, { useContext, useState } from \"react\";\nimport { ToastsContainer, ToastsStore } from \"react-toasts\";\nimport todosContext from \"../../context/todosContext\";\nimport ArchiveItem from \"./ArchiveItem/ArchiveItem\";\n\nconst Archive = () => {\n  const context = useContext(todosContext);\n\n  let archive = \"Archive is empty\";\n\n  if (context.archive.length) {\n    archive = context.archive.map(item => (\n      <ArchiveItem key={item.key} {...item} />\n    ));\n  } else {\n    ToastsStore.info(\"Archive is empty! \\n(Arhiva je prazna)\");\n  }\n\n  return (\n    <>\n      <ul className=\"l-archive\">\n        {archive}\n        <ToastsContainer store={ToastsStore} />\n      </ul>\n    </>\n  );\n};\n\nexport default Archive;\n","import ArchivePage from './ArchivePage'\n\nexport default ArchivePage","import React from 'react';\nimport Archive from '../../Archive/Archive';\n\nconst ArchivePage = () => {\n  return(\n    <>\n      <Archive />\n    </>\n  )\n}\n\nexport default ArchivePage;","import { ADD_TODO, LOAD_TODOS, TOGGLE_TODO, REMOVE_TODO, ADD_TODO_ARCHIVE, LOAD_TODOS_ARCHIVE, BACK_TODO } from \"../types\";\n\nconst initialState = {\n  todos: [],\n  archive: []\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return {\n        ...state,\n        todos: [...state.todos, action.payload]\n      };\n    case LOAD_TODOS:\n      return {\n        ...state,\n        todos: action.payload\n      };\n    case TOGGLE_TODO:\n      return toggleTodo(state, action.payload);\n    case REMOVE_TODO:\n      return removeTodo(state, action.payload);\n    case ADD_TODO_ARCHIVE:\n      return addTodoArchive(state, action.payload);\n    case LOAD_TODOS_ARCHIVE:\n      return {\n        ...state,\n        archive: action.payload\n      };\n    case BACK_TODO:\n      return backTodo(state, action.payload);\n    default:\n      return state;\n  }\n};\n\nconst toggleTodo = (state, id) => {\n  let updated_todos = state.todos.map(todo => {\n    if(todo.id === id) {\n      return {\n        ...todo,\n        isComplete: !todo.isComplete\n      }\n    } else {\n      return todo\n    }\n  })\n\n  return {\n    ...state,\n    todos: updated_todos\n  }\n}\n\nconst removeTodo = (state, id) => {\n  let updated_todos = state.todos.filter(todo => {\n    if (todo.id === id) {\n      return null\n    } else {\n      return todo;\n    }\n  });\n\n  console.log(\"Remove todo: \", updated_todos);\n\n  return {\n    ...state,\n    todos: updated_todos\n  };\n};\n\nconst addTodoArchive = (state, id) => {\n  const archiveTodo = state.todos.filter(todo => todo.id === id)[0];\n\n  console.log(\"archiveTodo\", archiveTodo);\n\n  const updated_todos = state.todos.filter(item => item.id === id ? null : item);\n  \n  return {\n    ...state,\n    todos: updated_todos,\n    archive: [...state.archive, archiveTodo]\n  };\n}\n\nconst backTodo = (state, id) => {\n  \n  const currentTodo = state.archive.filter(todo => todo.id === id)[0];\n  const updated_archive = state.archive.filter(item =>\n    item.id === id ? null : item\n  );\n  \n  return {\n    ...state,\n    todos: [...state.todos, currentTodo],\n    archive: updated_archive\n  }\n}\n","export const ADD_TODO = 'ADD_TODO';\nexport const LOAD_TODOS = 'GET_TODOS';\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\nexport const REMOVE_TODO = \"REMOVE_TODO\";\n\n// archive\nexport const ADD_TODO_ARCHIVE = \"ADD_TODO_ARCHIVE\";\nexport const LOAD_TODOS_ARCHIVE = \"LOAD_TODOS_ARCHIVE\";\nexport const BACK_TODO = \"BACK_TODO\";\n\n\n\n","import { useReducer, useEffect } from \"react\";\nimport todosReducer from \"../reducers/todosReducer\";\nimport {\n  ADD_TODO,\n  LOAD_TODOS,\n  TOGGLE_TODO,\n  REMOVE_TODO,\n  ADD_TODO_ARCHIVE,\n  LOAD_TODOS_ARCHIVE,\n  BACK_TODO\n} from \"../types\";\n\n/*\n    razmisljanje o generalizaciji problema\n*/\n\nconst useLocalStorage = key => {\n  const initialState = {\n    todos: [],\n    archive: []\n  };\n\n  const [state, dispatch] = useReducer(todosReducer, initialState);\n\n  // load todos from local storage\n  useEffect(() => {\n    console.log(\"use effect 1\");\n    const todos = JSON.parse(window.localStorage.getItem(key));\n\n    if (todos) {\n      dispatch({\n        type: LOAD_TODOS,\n        payload: todos\n      });\n    }\n  }, []);\n\n  // load archive\n  useEffect(() => {\n    console.log(\"use effect 2\");\n\n    const archive = JSON.parse(window.localStorage.getItem(`${key}-archive`));\n\n    console.log(\"archive\", archive);\n\n    if (archive) {\n      dispatch({\n        type: LOAD_TODOS_ARCHIVE,\n        payload: archive\n      });\n    }\n  }, []);\n\n  const addTodo = todo => {\n    let updated_todos = [...state.todos, todo];\n\n    window.localStorage.setItem(key, JSON.stringify(updated_todos));\n\n    dispatch({ type: ADD_TODO, payload: todo });\n  };\n\n  const toggleTodo = id => {\n    // update local storage\n    let updated_todos = [...state.todos].map(todo => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          isComplete: !todo.isComplete\n        };\n      } else {\n        return todo;\n      }\n    });\n\n    window.localStorage.setItem(key, JSON.stringify(updated_todos));\n\n    // dispatch action\n    dispatch({ type: TOGGLE_TODO, payload: id });\n  };\n\n  const removeTodo = id => {\n    // update local storage\n    let updated_todos = [...state.todos].filter(todo => {\n      if (todo.id === id) {\n        return null;\n      } else {\n        return todo;\n      }\n    });\n\n    window.localStorage.setItem(key, JSON.stringify(updated_todos));\n\n    // dispatch action\n    dispatch({ type: REMOVE_TODO, payload: id });\n  };\n\n  const archiveTodo = id => {\n    const archiveTodo = state.todos.filter(todo => todo.id === id)[0];\n\n    const updatedArchive = [...state.archive, archiveTodo];\n\n    const updatedTodos = [...state.todos].filter(item => item.id !== id);\n\n    window.localStorage.setItem(\n      `${key}-archive`,\n      JSON.stringify(updatedArchive)\n    );\n\n    window.localStorage.setItem(`${key}`, JSON.stringify(updatedTodos));\n\n    dispatch({ type: ADD_TODO_ARCHIVE, payload: id });\n  };\n\n  const backToTodos = id => {\n    const currentTodo = state.archive.filter(item => item.id === id)[0];\n    currentTodo.isComplete = false;\n    const updatedArchive = state.archive.filter(item => item.id !== id);\n    const updatedTodos = [...state.todos, currentTodo];\n\n    window.localStorage.setItem(\n      `${key}-archive`,\n      JSON.stringify(updatedArchive)\n    );\n\n    window.localStorage.setItem(`${key}`, JSON.stringify(updatedTodos));\n\n    dispatch({type: BACK_TODO, payload: id})\n  };\n\n  return [state, addTodo, removeTodo, toggleTodo, archiveTodo, backToTodos];\n};\n\nexport default useLocalStorage;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./styles/styles.scss\";\n\nimport Header from \"./components/Header\";\nimport AddTodoForm from \"./components/AddTodoForm/AddTodoForm\";\nimport Homepage from \"./components/pages/Homepage\";\nimport ArchivePage from \"./components/pages/ArchivePage\";\n\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport TodosContext from \"./context/todosContext\";\n\nfunction App() {\n  const localStorageKey = \"custom-hook-todos\";\n  const [\n    state,\n    addTodo,\n    removeTodo,\n    toggleTodo,\n    archiveTodo,\n    backToTodos\n  ] = useLocalStorage(localStorageKey);\n\n  return (\n    <TodosContext.Provider\n      value={{\n        todos: state.todos,\n        archive: state.archive,\n        addTodo,\n        toggleTodo,\n        removeTodo,\n        archiveTodo,\n        backToTodos\n      }}\n    >\n      <Router>\n        <div className=\"l-container\">\n          <Header />\n          <Switch>\n            <Route path=\"/local-storage-todos\" exact>\n              <Homepage />\n            </Route>\n            <Route path=\"/local-storage-todos/add-todo\" exact>\n              <AddTodoForm />\n            </Route>\n            <Route path=\"/local-storage-todos/archive\" exact>\n              <ArchivePage />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </TodosContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}